@model IEnumerable<CBSManagementSystem.Models.Donation>

@{
    ViewData["Title"] = "Index";
}

<h1>Donation List</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Donation</a>
</p>

<!-- Search Bar -->
<div class="mb-3">
    <input type="text" id="searchInput" class="form-control" placeholder="Search donations..." onkeyup="searchTable()">
</div>

<!-- Donation Table -->
<table class="table table-bordered" id="donationTable">
    <thead>
        <tr>
            <th onclick="sortTable(0)">Donor Name</th>
            <th onclick="sortTable(1)">Phone Number</th>
            <th onclick="sortTable(2)">Item Name</th>
            <th onclick="sortTable(3)">Item Description</th>
            <th onclick="sortTable(4)">Price</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.DonorName</td>
                <td>@item.PhoneNo</td>
                <td>@item.ItemName</td>
                <td>@item.ItemDescription</td>
                <td>@item.Price</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ItemID" class="btn btn-warning btn-sm">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ItemID" class="btn btn-info btn-sm">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ItemID" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination (for example) -->
<div class="pagination">
    <a href="#">&laquo;</a>
    <a href="#">1</a>
    <a href="#">2</a>
    <a href="#">3</a>
    <a href="#">Next &raquo;</a>
</div>

<!-- JavaScript for Table Search, Sorting, and Pagination -->
<script>
    // Search functionality
    function searchTable() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("donationTable");
        tr = table.getElementsByTagName("tr");

        for (i = 1; i < tr.length; i++) { // Start from 1 to skip the header row
            td = tr[i].getElementsByTagName("td");
            let rowContainsFilter = false;

            // Loop through each column to check if it contains the search term
            for (let j = 0; j < td.length; j++) {
                if (td[j]) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        rowContainsFilter = true;
                        break;  // Exit the loop as we found a match in the row
                    }
                }
            }

            tr[i].style.display = rowContainsFilter ? "" : "none"; // Show or hide row based on filter
        }
    }

    // Sorting functionality for table columns
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("donationTable");
        switching = true;
        dir = "asc";

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) { // Skip the header
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];

                if (dir === "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir === "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }

            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount === 0 && dir === "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>

<!-- CSS for Pagination -->
<style>
    .pagination {
        display: inline-block;
        margin-top: 20px;
    }

    .pagination a {
        color: black;
        padding: 8px 16px;
        text-decoration: none;
        border: 1px solid #ddd;
        margin: 0 4px;
    }

    .pagination a:hover {
        background-color: #ddd;
    }

    .pagination a.active {
        background-color: #4CAF50;
        color: white;
    }
</style>
